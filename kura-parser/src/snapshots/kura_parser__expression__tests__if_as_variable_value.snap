---
source: kura-parser/src/expression.rs
expression: let_if_ast
---
Var {
    mutable: false,
    name: "my_var",
    typ: None,
    value: If {
        condition: BinaryOp {
            operator: EqualEqual,
            lhs: Ident {
                name: "something",
                location: Location {
                    start_byte: 31,
                    end_byte: 40,
                },
            },
            rhs: Ident {
                name: "another_thing",
                location: Location {
                    start_byte: 44,
                    end_byte: 57,
                },
            },
            location: Location {
                start_byte: 31,
                end_byte: 57,
            },
        },
        location: Location {
            start_byte: 28,
            end_byte: 142,
        },
        truthy: Block {
            expressions: [
                BinaryOp {
                    operator: Plus,
                    lhs: UintLiteral {
                        value: 10,
                        size: None,
                        location: Location {
                            start_byte: 76,
                            end_byte: 78,
                        },
                    },
                    rhs: UintLiteral {
                        value: 10,
                        size: None,
                        location: Location {
                            start_byte: 81,
                            end_byte: 83,
                        },
                    },
                    location: Location {
                        start_byte: 76,
                        end_byte: 83,
                    },
                },
            ],
            location: Location {
                start_byte: 58,
                end_byte: 97,
            },
        },
        falsy: [
            Block {
                expressions: [
                    BinaryOp {
                        operator: Plus,
                        lhs: UintLiteral {
                            value: 20,
                            size: None,
                            location: Location {
                                start_byte: 121,
                                end_byte: 123,
                            },
                        },
                        rhs: UintLiteral {
                            value: 20,
                            size: None,
                            location: Location {
                                start_byte: 126,
                                end_byte: 128,
                            },
                        },
                        location: Location {
                            start_byte: 121,
                            end_byte: 128,
                        },
                    },
                ],
                location: Location {
                    start_byte: 103,
                    end_byte: 142,
                },
            },
        ],
    },
    location: Location {
        start_byte: 13,
        end_byte: 142,
    },
}
