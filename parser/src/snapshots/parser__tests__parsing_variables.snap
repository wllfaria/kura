---
source: parser/src/lib.rs
expression: result
---
[
    Var {
        name: "with_expression",
        value: BinaryOp {
            operator: Sub,
            lhs: BinaryOp {
                operator: Add,
                lhs: UintLiteral {
                    value: 1,
                    size: None,
                    location: Location {
                        start_byte: 22,
                        end_byte: 23,
                    },
                },
                rhs: BinaryOp {
                    operator: Mul,
                    lhs: UintLiteral {
                        value: 2,
                        size: None,
                        location: Location {
                            start_byte: 26,
                            end_byte: 27,
                        },
                    },
                    rhs: UintLiteral {
                        value: 3,
                        size: None,
                        location: Location {
                            start_byte: 30,
                            end_byte: 31,
                        },
                    },
                    location: Location {
                        start_byte: 26,
                        end_byte: 31,
                    },
                },
                location: Location {
                    start_byte: 22,
                    end_byte: 31,
                },
            },
            rhs: UintLiteral {
                value: 4,
                size: None,
                location: Location {
                    start_byte: 34,
                    end_byte: 35,
                },
            },
            location: Location {
                start_byte: 22,
                end_byte: 35,
            },
        },
        location: Location {
            start_byte: 22,
            end_byte: 35,
        },
    },
    Var {
        name: "single_value",
        value: FloatLiteral {
            value: 123.4,
            size: None,
            location: Location {
                start_byte: 56,
                end_byte: 61,
            },
        },
        location: Location {
            start_byte: 56,
            end_byte: 61,
        },
    },
    Const {
        name: "constant_with_expression",
        value: BinaryOp {
            operator: Add,
            lhs: FloatLiteral {
                value: 1.23,
                size: None,
                location: Location {
                    start_byte: 96,
                    end_byte: 100,
                },
            },
            rhs: BinaryOp {
                operator: Mul,
                lhs: FloatLiteral {
                    value: 4.56,
                    size: None,
                    location: Location {
                        start_byte: 103,
                        end_byte: 107,
                    },
                },
                rhs: FloatLiteral {
                    value: 7.89,
                    size: None,
                    location: Location {
                        start_byte: 110,
                        end_byte: 114,
                    },
                },
                location: Location {
                    start_byte: 103,
                    end_byte: 114,
                },
            },
            location: Location {
                start_byte: 96,
                end_byte: 114,
            },
        },
        location: Location {
            start_byte: 96,
            end_byte: 114,
        },
    },
]
